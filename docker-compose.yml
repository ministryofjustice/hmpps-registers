version: '3.7'
services:

  redis:
    image: 'bitnami/redis:5.0'
    networks:
      - hmpps
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "9090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      SPRING_PROFILES_ACTIVE: dev,token-verification,nomis
      TOKENVERIFICATION_ENDPOINT_URL: "http://token-verification-api:8080"
      NOMIS_ENDPOINT_URL: http://nomis-user-roles-api:8080

  token-verification-api:
    image: quay.io/hmpps/token-verification-api:latest
    networks:
      - hmpps
    container_name: token-verification-api
    depends_on:
      - redis
      - hmpps-auth
    ports:
      - "8100:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      SPRING_PROFILES_ACTIVE: local-redis
      SPRING_REDIS_HOST: redis
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "http://hmpps-auth:8080/auth/.well-known/jwks.json"

  court-register:
    image: quay.io/hmpps/court-register:latest
    networks:
      - hmpps
    container_name: court-register
    depends_on:
      - redis
      - localstack
      - court-register-db
      - hmpps-auth
    ports:
      - "8101:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - OAUTH_API_BASE_URL=http://hmpps-auth:8080/auth
      - OAUTH_ENDPOINT_URL=http://hmpps-auth:8080/auth
      - SPRING_DATASOURCE_URL=jdbc:postgresql://court-register-db:5432/court_register_db
      - SNS_ENDPOINT_URL=http://localstack:4566
      - HMPPS_SQS_LOCALSTACKURL=http://localstack:4566
      - SPRING_PROFILES_ACTIVE=stdout,localstack,postgres
      - AWS_ACCESS_KEY_ID=foobar
      - AWS_SECRET_ACCESS_KEY=foobar
      - AWS_DEFAULT_REGION=eu-west-2

  court-register-db:
    image: postgres:13.2
    networks:
      - hmpps
    container_name: court-register-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_DB=court_register_db

  nomis-user-roles-api:
    image: quay.io/hmpps/nomis-user-roles-api:latest
    networks:
      - hmpps
    container_name: nomis-user-roles-api
    depends_on:
      - hmpps-auth
    ports:
      - "8082:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - API_BASE_URL_OAUTH=http://hmpps-auth:8080/auth

  localstack:
    image: localstack/localstack:0.12.10
    networks:
      - hmpps
    container_name: localstack
    ports:
      - "4566-4597:4566-4597"
      - 8999:8080
    environment:
      - SERVICES=sns,sqs
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - PORT_WEB_UI=${PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_EXECUTION_ENV=True
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  app:
    build: .
    networks:
      - hmpps
    depends_on: [redis]
    ports:
      - "3000:3000"
    environment:
      - REDIS_HOST=redis
      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:9090/auth
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      - API_CLIENT_ID=hmpps-registers-ui-client
      - API_CLIENT_SECRET=clientsecret
      - SYSTEM_CLIENT_ID=hmpps-registers-ui
      - SYSTEM_CLIENT_SECRET=clientsecret
      - SESSION_SECRET=app-insecure-default-session
      - TOKEN_VERIFICATION_API_URL=http://token-verification-api:8080
      - TOKEN_VERIFICATION_ENABLED=true
      - INGRESS_URL=http://localhost:3000

networks:
  hmpps:

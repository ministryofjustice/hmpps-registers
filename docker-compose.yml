version: '3.7'
services:

  redis:
    image: 'redis:7.2'
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  prison-register:
    image: quay.io/hmpps/prison-register:latest
    container_name: prison-register
    depends_on:
      - prison-register-db
    ports:
      - "8103:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev,postgres
      - OAUTH_ENDPOINT_URL=http://hmpps-auth:9090/auth
      - SPRING_DATASOURCE_USERNAME=prison-register
      - SPRING_DATASOURCE_PASSWORD=prison-register
      - SPRING_DATASOURCE_URL=jdbc:postgresql://prison-register-db:5432/prison-register
      - DATABASE_ENDPOINT=prison-register-db:9432

  prison-register-db:
    image: postgres:15
    container_name: prison-register-db
    restart: always
    ports:
      - "9432:5432"
    environment:
      - POSTGRES_PASSWORD=prison-register
      - POSTGRES_USER=prison-register
      - POSTGRES_DB=prison-register


  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    ports:
      - "7432:5432"
    environment:
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_USER=admin
      - POSTGRES_DB=auth-db

  localstack:
    image: localstack/localstack:3.5.0
    container_name: localstack
    ports:
      - "4567-4597:4567-4597"
    environment:
      - SERVICES=s3
      - DEBUG=${DEBUG- }
      - DATA_DIR=${DATA_DIR- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - $PWD/localstack:/docker-entrypoint-initaws.d

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    depends_on:
      - auth-db
    ports:
      - "9090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SPRING_PROFILES_ACTIVE=dev,local-postgres,auth-seed
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/auth-db

  hmpps-external-users-api:
    image: quay.io/hmpps/hmpps-external-users-api:latest
    container_name: hmpps-external-users-api
    depends_on:
      - hmpps-auth
    ports:
      - "8089:8089"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/health/ping"]
    environment:
      - SERVER_PORT=8089
      - SPRING_PROFILES_ACTIVE=dev,local-postgres
      - API_BASE_URL_OAUTH=http://hmpps-auth:9090/auth
      - SPRING_R2DBC_URL=r2dbc:postgresql://auth-db:5432/auth-db?sslmode=prefer
      - SPRING_FLYWAY_URL=jdbc:postgresql://auth-db:5432/auth-db?sslmode=prefer

  hmpps-manage-users-api:
    image: quay.io/hmpps/hmpps-manage-users-api:latest
    container_name: hmpps-manage-users-api
    depends_on:
      - hmpps-external-users-api
    ports:
      - "9091:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - HMPPS-AUTH_ENDPOINT_URL=http://hmpps-auth:9090/auth
      - EXTERNAL-USERS_ENDPOINT_URL=http://hmpps-external-users-api:8089
      - NOMIS_ENDPOINT_URL=http://nomis-user-roles-api:8080
      - DELIUS_ENDPOINT_URL=http://community-api:8080
      - AUTHORIZATION-SERVER_TOKEN_ENDPOINT_URL=http://hmpps-auth:9090/auth/oauth/token

  app:
    build:
      context: .
      args:
        BUILD_NUMBER: "1.0.0"
        GIT_REF: "a1b2c3"
        GIT_BRANCH: main
    networks:
      - hmpps
    ports:
      - "3000:3000"
    environment:
      - PRODUCT_ID=UNASSIGNED
      - REDIS_ENABLED=false
      - REDIS_HOST=localhost
      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:9090/auth
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      # These will need to match new creds in the seed auth service auth
      - AUTH_CODE_CLIENT_ID=hmpps-registers
      - AUTH_CODE_CLIENT_SECRET=clientsecret
      - CLIENT_CREDS_CLIENT_ID=hmpps-registers-system
      - CLIENT_CREDS_CLIENT_SECRET=clientsecret
      - SESSION_SECRET=somesecretvalue
      - TOKEN_VERIFICATION_API_URL=http://hmpps-auth:8080/auth
      - TOKEN_VERIFICATION_ENABLED=false
      - INGRESS_URL=http://localhost:3000
      - NO_HTTPS=true

networks:
  hmpps: